generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Material {
  material_ID Int     @id @default(autoincrement())
  lager_ID    Int
  category    String?
  farbe       String?
  typ         String?
  groesse     String?
  url         String?

  lager          Lager                @relation(fields: [lager_ID], references: [lager_ID])
  eingaenge      Wareneingang[]
  bestellungen   Materialbestellung[]
  lagerbestaende Lagerbestand[]
  mindestbestand Mindestbestand?
  auftrag        Auftrag[]            @relation("MaterialToAuftrag")
}

model Materialbestellung {
  materialbestellung_ID Int     @id @default(autoincrement())
  lieferant_ID          Int
  material_ID           Int
  status                String?
  menge                 Int

  lieferant Lieferant      @relation(fields: [lieferant_ID], references: [lieferant_ID])
  material  Material       @relation(fields: [material_ID], references: [material_ID])
  eingaenge Wareneingang[]
}

model Wareneingang {
  eingang_ID            Int      @id @default(autoincrement())
  material_ID           Int
  materialbestellung_ID Int
  menge                 Int
  status                String?
  lieferdatum           DateTime

  qualitaet_ID          Int?
  qualitaet             Qualitaet? @relation("QualitaetToWareneingang", fields: [qualitaet_ID], references: [qualitaet_ID])

  material              Material           @relation(fields: [material_ID], references: [material_ID])
  materialbestellung    Materialbestellung @relation(fields: [materialbestellung_ID], references: [materialbestellung_ID])
  lagerbestaende        Lagerbestand[]
}

model Lieferant {
  lieferant_ID  Int    @id @default(autoincrement())
  firmenname    String
  kontaktperson String
  adresse_ID    Int

  adresse      Adresse              @relation(fields: [adresse_ID], references: [adresse_ID])
  bestellungen Materialbestellung[]
}

model Adresse {
  adresse_ID Int    @id @default(autoincrement())
  strasse    String
  ort        String
  plz        Int

  lieferanten Lieferant[]
}

model Lager {
  lager_ID    Int    @id @default(autoincrement())
  bezeichnung String

  materialien    Material[]
  lagerbestaende Lagerbestand[]
  auftrag        Auftrag[]      @relation("LagerToAuftrag")
}

model Qualitaet {
  qualitaet_ID   Int     @id @default(autoincrement())
  viskositaet    Float?
  ppml           Int?
  deltaE         Float?
  saugfaehigkeit Float?
  weissgrad      Int?

  eingaenge      Lagerbestand[]
  wareneingaenge Wareneingang[] @relation("QualitaetToWareneingang")
}

model Lagerbestand {
  lagerbestand_ID Int  @id @default(autoincrement())
  eingang_ID      Int?
  lager_ID        Int
  material_ID     Int
  menge           Int
  qualitaet_ID    Int?

  eingang   Wareneingang? @relation(fields: [eingang_ID], references: [eingang_ID])
  lager     Lager         @relation(fields: [lager_ID], references: [lager_ID])
  material  Material      @relation(fields: [material_ID], references: [material_ID])
  qualitaet Qualitaet?    @relation(fields: [qualitaet_ID], references: [qualitaet_ID])
  auftrag   Auftrag[]
}

model Mindestbestand {
  mindestbestand_ID Int @id @default(autoincrement())
  material_ID       Int @unique
  mindestbestand    Int

  material Material @relation(fields: [material_ID], references: [material_ID])
}

model Auftrag {
  auftrag_ID      Int     @id @default(autoincrement())
  lager_ID        Int
  material_ID     Int
  menge           Int
  status          String
  lagerbestand_ID Int
  bestellposition String?
  angefordertVon  String

  lager        Lager        @relation("LagerToAuftrag", fields: [lager_ID], references: [lager_ID])
  material     Material     @relation("MaterialToAuftrag", fields: [material_ID], references: [material_ID])
  lagerbestand Lagerbestand @relation(fields: [lagerbestand_ID], references: [lagerbestand_ID])
}
